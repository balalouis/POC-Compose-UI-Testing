name: Firebase test lab and Distribution app to tester

on:
  push:
    branches: [ "master" ]

  workflow_dispatch:

jobs:
  firebase_test_lab:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-    

      - name: Run Unit Tests with Gradle
        run: ./gradlew test

      - name: Build App with Gradle
        run: ./gradlew assembleDebug

      - name: Build Android Test APK
        run: ./gradlew assembleAndroidTest

      - name: Run Android tests on Firebase Test Lab
        uses: asadmansr/Firebase-Test-Lab-Action@v1.0
        with:
          arg-spec: 'android-device.yml:android-pixel-4'
        env:
          SERVICE_ACCOUNT: ${{ secrets.CREDENTIAL_FILE_CONTENT }}

  firebase_distribute_job:
    needs: [ lint_job, unit_test_job, android_test_job ]
    name: Assemble and Upload to Firebase
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble
        env:
          VERSION_CODE: ${{ github.run_id }}
        run: ./gradlew assembleDebug

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: QA
          file: app/build/outputs/apk/debug/app-debug.apk

  notification_job:
    needs: [ firebase_test_lab, firebase_distribute_job ]
    name: Notify Build Status
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: commit,ref,workflow,eventName
          author_name: ${{ github.actor }}
          icon_emoji: ':robot_face:'
          username: "Pull Request Build Status"
          text: |
            ${{ env.WORKFLOW_CONCLUSION }}:
            https://github.com/balalouis/POC-Compose-UI-Testing/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}