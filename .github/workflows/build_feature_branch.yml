name: Build Feature Branch

on:
  push:
    branches: 'feature/**'

    workflow_dispatch:

jobs:
  test_job:
    name: Test
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Debug Tests
        run: ./gradlew testDebugUnitTest --continue

      - name: Upload Test Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: '**/build/reports/tests/'

  lint_job:
    name: Lint
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Debug Lint
        run: ./gradlew lintDebug

      - name: Upload Lint Reports
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: lint-report
          path: '**/build/reports/lint-results-*'

  assemble_distribute_job:
    needs: [ test_job, lint_job ]
    name: Assemble and Upload to Firebase
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble
        env:
          VERSION_CODE: ${{ github.run_id }}
        run: ./gradlew assembleDebug

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: QA
          file: app/build/outputs/apk/debug/app-debug.apk

  generate_and_upload_apk:
    needs: [ test_job, lint_job ]
    name: Generate and Upload apk to Firebase
    runs-on: macos-latest
    continue-on-error: true
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble
        env:
          VERSION_CODE: ${{ github.run_id }}
        run: ./gradlew assembleDebug

      - name: Upload app APK
        uses: actions/upload-artifact@v1
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Run Android Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: ./gradlew connectedDebugAndroidTest

      - name: Upload Android Test APK
        uses: actions/upload-artifact@v1
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

  notification_job:
    needs: [ test_job, lint_job, assemble_distribute_job ]
    name: Notify Build Status
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: commit,ref,workflow,eventName
          author_name: ${{ github.actor }}
          icon_emoji: ':robot_face:'
          username: "Feature Branch Build Status"
          text: |
            ${{ env.WORKFLOW_CONCLUSION }}:
            https://github.com/balalouis/POC-Compose-UI-Testing/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}